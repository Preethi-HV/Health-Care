// Generated by view binder compiler. Do not edit!
package com.example.medicinedatabase.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medicinedatabase.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonHADBack;

  @NonNull
  public final ListView listViewHA;

  @NonNull
  public final TextView textViewHADTitle;

  @NonNull
  public final TextView textViewLogo3;

  private ActivityOrderDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonHADBack, @NonNull ListView listViewHA,
      @NonNull TextView textViewHADTitle, @NonNull TextView textViewLogo3) {
    this.rootView = rootView;
    this.buttonHADBack = buttonHADBack;
    this.listViewHA = listViewHA;
    this.textViewHADTitle = textViewHADTitle;
    this.textViewLogo3 = textViewLogo3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonHADBack;
      Button buttonHADBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonHADBack == null) {
        break missingId;
      }

      id = R.id.listViewHA;
      ListView listViewHA = ViewBindings.findChildViewById(rootView, id);
      if (listViewHA == null) {
        break missingId;
      }

      id = R.id.textViewHADTitle;
      TextView textViewHADTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewHADTitle == null) {
        break missingId;
      }

      id = R.id.textView_logo3;
      TextView textViewLogo3 = ViewBindings.findChildViewById(rootView, id);
      if (textViewLogo3 == null) {
        break missingId;
      }

      return new ActivityOrderDetailsBinding((ConstraintLayout) rootView, buttonHADBack, listViewHA,
          textViewHADTitle, textViewLogo3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
