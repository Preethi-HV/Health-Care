// Generated by view binder compiler. Do not edit!
package com.example.medicinedatabase.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medicinedatabase.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDoctorDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonDDBack;

  @NonNull
  public final ListView listViewDD;

  @NonNull
  public final TextView textViewDDName;

  @NonNull
  public final TextView textViewDDTitle;

  private ActivityDoctorDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonDDBack, @NonNull ListView listViewDD, @NonNull TextView textViewDDName,
      @NonNull TextView textViewDDTitle) {
    this.rootView = rootView;
    this.buttonDDBack = buttonDDBack;
    this.listViewDD = listViewDD;
    this.textViewDDName = textViewDDName;
    this.textViewDDTitle = textViewDDTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDoctorDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDoctorDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_doctor_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDoctorDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDDBack;
      Button buttonDDBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonDDBack == null) {
        break missingId;
      }

      id = R.id.listViewDD;
      ListView listViewDD = ViewBindings.findChildViewById(rootView, id);
      if (listViewDD == null) {
        break missingId;
      }

      id = R.id.textViewDDName;
      TextView textViewDDName = ViewBindings.findChildViewById(rootView, id);
      if (textViewDDName == null) {
        break missingId;
      }

      id = R.id.textViewDDTitle;
      TextView textViewDDTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewDDTitle == null) {
        break missingId;
      }

      return new ActivityDoctorDetailsBinding((ConstraintLayout) rootView, buttonDDBack, listViewDD,
          textViewDDName, textViewDDTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
